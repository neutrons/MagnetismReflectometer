name: Tests, Package, and Deployment

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [next, qa, main]
    tags: ["v*"]

env:
  PKG_NAME: mr_reduction

jobs:
  #################
  ### Run Tests ###
  #################

  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pixi
        uses: prefix-dev/setup-pixi@v0.8.10
        with:
          pixi-version: v0.49.0

      - name: Install chromium
        run: |
          echo "chromium enables testing HTML reports"
          sudo apt-get install --yes chromium-browser

      - name: Run unit tests
        run: |
          pixi run test -vv -m "not datarepo and not sns_mounted" --cov=src --cov-report=xml --cov-report=term-missing tests/
          mv .coverage .coverage.unit

      - name: Run integration tests
        run: |
          git submodule update --init
          pixi run test -vv -m "datarepo" --cov=src --cov-report=xml  --cov-report=term-missing tests/
          mv .coverage .coverage.integration

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}


  ##############################
  ### Package and Deployment ###
  ##############################

  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 100
          fetch-tags: true
          ref: ${{ github.ref }}

      - name: Setup Pixi
        uses: prefix-dev/setup-pixi@v0.8.10
        with:
          pixi-version: v0.49.0

      - name: Build conda package
        run: |
          pixi run conda-build
          mkdir -p /tmp/local-channel/linux-64 && cp ${{ env.PKG_NAME }}-*.conda /tmp/local-channel/linux-64/

      - name: Verify Conda Package
        uses: neutrons/conda-verify@main
        with:
          local-channel: /tmp/local-channel
          package-name: ${{ env.PKG_NAME }}
          extra-channels: mantid-ornl mantid neutrons oncat
          extra-commands: |
            pixi run python -c "import mantid"
            pixi run python -c "import pyoncat"

      # Upload the conda package for job "publish" to use later
      - name: upload conda package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-conda-package
          path: ${{ env.PKG_NAME }}-*.conda


  # Publish the package as a separate job so that the Github Actions webpage
  # shows it as a separate step in the CI workflow
  publish:
    runs-on: ubuntu-24.04
    needs: [tests, build]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 100
          fetch-tags: true
          ref: ${{ github.ref }}

      - name: Setup Pixi
        uses: prefix-dev/setup-pixi@v0.8.10
        with:
          pixi-version: v0.49.0

      - name: Download conda package artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact-conda-package

      - name: Upload package to anaconda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
          IS_RC: ${{ contains(github.ref, 'rc') }}
        run: |
          # label is main or rc depending on the tag-name
          CONDA_LABEL="main"
          if [ "${IS_RC}" = "true" ]; then CONDA_LABEL="rc"; fi
          echo pushing ${{ github.ref }} with label $CONDA_LABEL
          pixi run anaconda upload --label $CONDA_LABEL --user neutrons ${{ env.PKG_NAME }}-*.conda
